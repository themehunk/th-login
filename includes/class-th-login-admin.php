	<?php
	// Exit if accessed directly.
	if ( ! defined( 'ABSPATH' ) ) {
		exit;
	}

	/**
	 * Handles all admin-related functionalities for TH Login.
	 */
	class TH_Login_Admin {

		/**
		 * Constructor.
		 */
		public function __construct() {
			add_action( 'admin_menu', array( $this, 'register_admin_menu_page' ) );
			add_action( 'admin_enqueue_scripts', array( $this, 'enqueue_admin_scripts' ) );
		}

		/**
		 * Register the admin menu page.
		 */
		public function register_admin_menu_page() {
			add_menu_page(
				esc_html__( 'TH Login', 'th-login' ), // Page title
				esc_html__( 'TH Login', 'th-login' ), // Menu title
				'manage_options',                    // Capability required to access
				'th-login-settings',                 // Menu slug
				array( $this, 'render_admin_page' ), // Callback function to render page content
				'dashicons-admin-users',             // Icon for the menu item
				59                                   // Position in the menu
			);
		}

		/**
		 * Render the admin settings page.
		 * This will be the root element for our React app.
		 */
		public function render_admin_page() {
			if ( ! current_user_can( 'manage_options' ) ) {
				return; // Security check.
			}
			?>
			<div id="th-login-admin-root" class="wrap">
				<h1><?php echo esc_html__( 'TH Login Settings', 'th-login' ); ?></h1>
				<p><?php echo esc_html__( 'Loading settings...', 'th-login' ); ?></p>
			</div>
			<?php
		}

		/**
		 * Enqueue admin scripts and styles for the settings page.
		 *
		 * @param string $hook The current admin page hook.
		 */
		public function enqueue_admin_scripts( $hook ) {
		if ( 'toplevel_page_th-login-settings' !== $hook ) {
			return;
		}

		// Load asset file generated by WP scripts build
		$asset_file = TH_LOGIN_PATH . 'app/build/admin.asset.php';
		$asset_config = file_exists( $asset_file ) ? require_once $asset_file : array(
			'dependencies' => array(),
			'version'      => TH_LOGIN_VERSION,
		);

		wp_enqueue_style( 'wp-components' );
		wp_enqueue_media();
		wp_enqueue_script( 'wp-block-editor' );
		wp_enqueue_script( 'wp-edit-post' );
		wp_enqueue_style( 'wp-edit-blocks' );

		// ✅ Enqueue the correct admin.js file
		wp_enqueue_script(
			'th-login-admin-script',
			TH_LOGIN_URL . 'app/build/admin.js',
			$asset_config['dependencies'],
			$asset_config['version'],
			true
		);

		// ✅ Enqueue the correct admin.css file
		wp_enqueue_style(
			'th-login-admin-style',
			TH_LOGIN_URL . 'app/build/admin.css',
			array(),
			$asset_config['version']
		);

		// ✅ Localize
		$settings_data = array(
			'general'          => json_decode( get_option( 'th_login_general_settings', '{}' ), true ),
			'design'           => json_decode( get_option( 'th_login_design_settings', '{}' ), true ),
			'form_fields'      => json_decode( get_option( 'th_login_form_fields_settings', '{}' ), true ),
			'display_triggers' => json_decode( get_option( 'th_login_display_triggers_settings', '{}' ), true ),
			'security'         => json_decode( get_option( 'th_login_security_settings', '{}' ), true ),
		);

		wp_localize_script(
			'th-login-admin-script',
			'thLoginData',
			array(
				'root'      => esc_url_raw( rest_url( 'th-login/v1/' ) ),
				'nonce'     => wp_create_nonce( 'wp_rest' ),
				'settings'  => $settings_data,
				'pluginUrl' => TH_LOGIN_URL,
				'siteUrl'   => get_site_url(),
				'ajaxUrl'   => admin_url( 'admin-ajax.php' ),
			)
		);
	}

	}
